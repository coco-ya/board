<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cocoyami.board.mappers.IMemberMapper">
    <insert id="insertUser"
    parameterType="com.cocoyami.board.entities.member.UserEntity">
    INSERT INTO `study_member`.users(`email`, `password`, `nickname`, `name`, `contact`, `address_postal`, `address_primary`, `address_secondary`)
    VALUES (#{email},#{password},#{nickname},#{name},#{contact},#{addressPostal},#{addressPrimary},#{addressSecondary})
    </insert>

    <insert id="insertEmailAuth"
            useGeneratedKeys="true"
            keyColumn="index"
            keyProperty="index"
            parameterType="com.cocoyami.board.entities.member.EmailAuthEntity">
        INSERT INTO `study_member`.`email_auths`(email, code, salt, created_on, expires_on, expired_flag)
        VALUES (#{email}, #{code}, #{salt}, #{createdOn}, #{expiresOn}, #{isExpired})

    </insert>

    <select id="selectUserByEmail"
            resultType="com.cocoyami.board.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `password`          AS `password`,
               `nickname`          AS `nickname`,
               `name`              AS `name`,
               `contact`           AS `contact`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on` AS `registerdOn`
        FROM `study_member`.`users`
        WHERE BINARY `email` = #{email}
        LIMIT 1
    </select>

    <select id="selectEmailAuthByEmailCodeSalt"
    resultType="com.cocoyami.board.entities.member.EmailAuthEntity">
        SELECT `index`        AS `index`,
               `email`        AS `email`,
               `code`         AS `code`,
               `salt`         AS `salt`,
               `created_on`   AS `createdOn`,
               `expires_on`   AS `expiresOn`,
               `expired_flag` AS `isExpired`
        FROM `study_member`.`email_auths`
        WHERE BINARY `email` = #{email}
          AND BINARY `code` = #{code}
          AND `salt` = #{salt}
        LIMIT 1
    </select>

    <select id="selectUserByNickname"
            resultType="com.cocoyami.board.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `password`          AS `password`,
               `nickname`          AS `nickname`,
               `name`              AS `name`,
               `contact`           AS `contact`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on` AS `registerdOn`
        FROM `study_member`.`users`
        WHERE BINARY `nickname` = #{nickname}
        LIMIT 1
    </select>

    <select id="selectUserByContact"
            resultType="com.cocoyami.board.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `password`          AS `password`,
               `nickname`          AS `nickname`,
               `name`              AS `name`,
               `contact`           AS `contact`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on` AS `registerdOn`
        FROM `study_member`.`users`
        WHERE BINARY `contact` = #{contact}
        LIMIT 1
    </select>

    <select id="selectUserByEmailPassword"
    resultType="com.cocoyami.board.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `password`          AS `password`,
               `nickname`          AS `nickname`,
               `name`              AS `name`,
               `contact`           AS `contact`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registerdOn`
        FROM `study_member`.users
        WHERE BINARY `email` = #{email}
          AND BINARY `password` = #{password}
        LIMIT 1
    </select>

    <update id="updateEmailAuth" parameterType="com.cocoyami.board.entities.member.EmailAuthEntity">
        UPDATE `study_member`.`email_auths`
        SET `email`        = #{email},
            `code`         = #{code},
            `salt`         = #{salt},
            `created_on`   = #{createdOn},
            `expires_on`= #{expiresOn},
            `expired_flag` = #{isExpired}
        WHERE `index` = #{index}
        LIMIT 1
    </update>
</mapper>